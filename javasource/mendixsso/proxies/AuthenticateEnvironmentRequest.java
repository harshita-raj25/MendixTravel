// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mendixsso.proxies;

public class AuthenticateEnvironmentRequest
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject authenticateEnvironmentRequestMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MendixSSO.AuthenticateEnvironmentRequest";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		EnvironmentUUID("EnvironmentUUID"),
		EnvironmentPassword("EnvironmentPassword");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AuthenticateEnvironmentRequest(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected AuthenticateEnvironmentRequest(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject authenticateEnvironmentRequestMendixObject)
	{
		if (authenticateEnvironmentRequestMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, authenticateEnvironmentRequestMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.authenticateEnvironmentRequestMendixObject = authenticateEnvironmentRequestMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AuthenticateEnvironmentRequest.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mendixsso.proxies.AuthenticateEnvironmentRequest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mendixsso.proxies.AuthenticateEnvironmentRequest.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static mendixsso.proxies.AuthenticateEnvironmentRequest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mendixsso.proxies.AuthenticateEnvironmentRequest(context, mendixObject);
	}

	public static mendixsso.proxies.AuthenticateEnvironmentRequest load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mendixsso.proxies.AuthenticateEnvironmentRequest.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of EnvironmentUUID
	 */
	public final java.lang.String getEnvironmentUUID()
	{
		return getEnvironmentUUID(getContext());
	}

	/**
	 * @param context
	 * @return value of EnvironmentUUID
	 */
	public final java.lang.String getEnvironmentUUID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.EnvironmentUUID.toString());
	}

	/**
	 * Set value of EnvironmentUUID
	 * @param environmentuuid
	 */
	public final void setEnvironmentUUID(java.lang.String environmentuuid)
	{
		setEnvironmentUUID(getContext(), environmentuuid);
	}

	/**
	 * Set value of EnvironmentUUID
	 * @param context
	 * @param environmentuuid
	 */
	public final void setEnvironmentUUID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String environmentuuid)
	{
		getMendixObject().setValue(context, MemberNames.EnvironmentUUID.toString(), environmentuuid);
	}

	/**
	 * @return value of EnvironmentPassword
	 */
	public final java.lang.String getEnvironmentPassword()
	{
		return getEnvironmentPassword(getContext());
	}

	/**
	 * @param context
	 * @return value of EnvironmentPassword
	 */
	public final java.lang.String getEnvironmentPassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.EnvironmentPassword.toString());
	}

	/**
	 * Set value of EnvironmentPassword
	 * @param environmentpassword
	 */
	public final void setEnvironmentPassword(java.lang.String environmentpassword)
	{
		setEnvironmentPassword(getContext(), environmentpassword);
	}

	/**
	 * Set value of EnvironmentPassword
	 * @param context
	 * @param environmentpassword
	 */
	public final void setEnvironmentPassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String environmentpassword)
	{
		getMendixObject().setValue(context, MemberNames.EnvironmentPassword.toString(), environmentpassword);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return authenticateEnvironmentRequestMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mendixsso.proxies.AuthenticateEnvironmentRequest that = (mendixsso.proxies.AuthenticateEnvironmentRequest) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
