// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailtemplate.proxies;

public class OAuthErrors
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject oAuthErrorsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailTemplate.OAuthErrors";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		HTTPStatusCode("HTTPStatusCode"),
		ErrorType("ErrorType"),
		Message("Message"),
		TraceID("TraceID"),
		CorrelationID("CorrelationID"),
		Timestamp("Timestamp"),
		ErrorCodes("ErrorCodes"),
		OAuthErrors_Session("EmailTemplate.OAuthErrors_Session");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OAuthErrors(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected OAuthErrors(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject oAuthErrorsMendixObject)
	{
		if (oAuthErrorsMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, oAuthErrorsMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.oAuthErrorsMendixObject = oAuthErrorsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'OAuthErrors.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static emailtemplate.proxies.OAuthErrors initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailtemplate.proxies.OAuthErrors.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static emailtemplate.proxies.OAuthErrors initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailtemplate.proxies.OAuthErrors(context, mendixObject);
	}

	public static emailtemplate.proxies.OAuthErrors load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailtemplate.proxies.OAuthErrors.initialize(context, mendixObject);
	}

	public static java.util.List<emailtemplate.proxies.OAuthErrors> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> emailtemplate.proxies.OAuthErrors.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of HTTPStatusCode
	 */
	public final java.lang.Integer getHTTPStatusCode()
	{
		return getHTTPStatusCode(getContext());
	}

	/**
	 * @param context
	 * @return value of HTTPStatusCode
	 */
	public final java.lang.Integer getHTTPStatusCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.HTTPStatusCode.toString());
	}

	/**
	 * Set value of HTTPStatusCode
	 * @param httpstatuscode
	 */
	public final void setHTTPStatusCode(java.lang.Integer httpstatuscode)
	{
		setHTTPStatusCode(getContext(), httpstatuscode);
	}

	/**
	 * Set value of HTTPStatusCode
	 * @param context
	 * @param httpstatuscode
	 */
	public final void setHTTPStatusCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer httpstatuscode)
	{
		getMendixObject().setValue(context, MemberNames.HTTPStatusCode.toString(), httpstatuscode);
	}

	/**
	 * @return value of ErrorType
	 */
	public final java.lang.String getErrorType()
	{
		return getErrorType(getContext());
	}

	/**
	 * @param context
	 * @return value of ErrorType
	 */
	public final java.lang.String getErrorType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ErrorType.toString());
	}

	/**
	 * Set value of ErrorType
	 * @param errortype
	 */
	public final void setErrorType(java.lang.String errortype)
	{
		setErrorType(getContext(), errortype);
	}

	/**
	 * Set value of ErrorType
	 * @param context
	 * @param errortype
	 */
	public final void setErrorType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String errortype)
	{
		getMendixObject().setValue(context, MemberNames.ErrorType.toString(), errortype);
	}

	/**
	 * @return value of Message
	 */
	public final java.lang.String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final java.lang.String getMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(java.lang.String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * @return value of TraceID
	 */
	public final java.lang.String getTraceID()
	{
		return getTraceID(getContext());
	}

	/**
	 * @param context
	 * @return value of TraceID
	 */
	public final java.lang.String getTraceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TraceID.toString());
	}

	/**
	 * Set value of TraceID
	 * @param traceid
	 */
	public final void setTraceID(java.lang.String traceid)
	{
		setTraceID(getContext(), traceid);
	}

	/**
	 * Set value of TraceID
	 * @param context
	 * @param traceid
	 */
	public final void setTraceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String traceid)
	{
		getMendixObject().setValue(context, MemberNames.TraceID.toString(), traceid);
	}

	/**
	 * @return value of CorrelationID
	 */
	public final java.lang.String getCorrelationID()
	{
		return getCorrelationID(getContext());
	}

	/**
	 * @param context
	 * @return value of CorrelationID
	 */
	public final java.lang.String getCorrelationID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CorrelationID.toString());
	}

	/**
	 * Set value of CorrelationID
	 * @param correlationid
	 */
	public final void setCorrelationID(java.lang.String correlationid)
	{
		setCorrelationID(getContext(), correlationid);
	}

	/**
	 * Set value of CorrelationID
	 * @param context
	 * @param correlationid
	 */
	public final void setCorrelationID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String correlationid)
	{
		getMendixObject().setValue(context, MemberNames.CorrelationID.toString(), correlationid);
	}

	/**
	 * @return value of Timestamp
	 */
	public final java.lang.String getTimestamp()
	{
		return getTimestamp(getContext());
	}

	/**
	 * @param context
	 * @return value of Timestamp
	 */
	public final java.lang.String getTimestamp(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Timestamp.toString());
	}

	/**
	 * Set value of Timestamp
	 * @param timestamp
	 */
	public final void setTimestamp(java.lang.String timestamp)
	{
		setTimestamp(getContext(), timestamp);
	}

	/**
	 * Set value of Timestamp
	 * @param context
	 * @param timestamp
	 */
	public final void setTimestamp(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String timestamp)
	{
		getMendixObject().setValue(context, MemberNames.Timestamp.toString(), timestamp);
	}

	/**
	 * @return value of ErrorCodes
	 */
	public final java.lang.String getErrorCodes()
	{
		return getErrorCodes(getContext());
	}

	/**
	 * @param context
	 * @return value of ErrorCodes
	 */
	public final java.lang.String getErrorCodes(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ErrorCodes.toString());
	}

	/**
	 * Set value of ErrorCodes
	 * @param errorcodes
	 */
	public final void setErrorCodes(java.lang.String errorcodes)
	{
		setErrorCodes(getContext(), errorcodes);
	}

	/**
	 * Set value of ErrorCodes
	 * @param context
	 * @param errorcodes
	 */
	public final void setErrorCodes(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String errorcodes)
	{
		getMendixObject().setValue(context, MemberNames.ErrorCodes.toString(), errorcodes);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of OAuthErrors_Session
	 */
	public final system.proxies.Session getOAuthErrors_Session() throws com.mendix.core.CoreException
	{
		return getOAuthErrors_Session(getContext());
	}

	/**
	 * @param context
	 * @return value of OAuthErrors_Session
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.Session getOAuthErrors_Session(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Session result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OAuthErrors_Session.toString());
		if (identifier != null) {
			result = system.proxies.Session.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of OAuthErrors_Session
	 * @param oautherrors_session
	 */
	public final void setOAuthErrors_Session(system.proxies.Session oautherrors_session)
	{
		setOAuthErrors_Session(getContext(), oautherrors_session);
	}

	/**
	 * Set value of OAuthErrors_Session
	 * @param context
	 * @param oautherrors_session
	 */
	public final void setOAuthErrors_Session(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Session oautherrors_session)
	{
		if (oautherrors_session == null) {
			getMendixObject().setValue(context, MemberNames.OAuthErrors_Session.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.OAuthErrors_Session.toString(), oautherrors_session.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return oAuthErrorsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailtemplate.proxies.OAuthErrors that = (emailtemplate.proxies.OAuthErrors) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
