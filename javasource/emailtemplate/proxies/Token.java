// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailtemplate.proxies;

public class Token
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject tokenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailTemplate.Token";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		token_type("token_type"),
		scope("scope"),
		expires_in("expires_in"),
		ext_expires_in("ext_expires_in"),
		access_token("access_token"),
		refresh_token("refresh_token"),
		id_token("id_token"),
		Token_EmailSettings("EmailTemplate.Token_EmailSettings");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Token(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject tokenMendixObject)
	{
		if (tokenMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, tokenMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.tokenMendixObject = tokenMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Token.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static emailtemplate.proxies.Token initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailtemplate.proxies.Token.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static emailtemplate.proxies.Token initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailtemplate.proxies.Token(context, mendixObject);
	}

	public static emailtemplate.proxies.Token load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailtemplate.proxies.Token.initialize(context, mendixObject);
	}

	public static java.util.List<emailtemplate.proxies.Token> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> emailtemplate.proxies.Token.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of token_type
	 */
	public final java.lang.String gettoken_type()
	{
		return gettoken_type(getContext());
	}

	/**
	 * @param context
	 * @return value of token_type
	 */
	public final java.lang.String gettoken_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.token_type.toString());
	}

	/**
	 * Set value of token_type
	 * @param token_type
	 */
	public final void settoken_type(java.lang.String token_type)
	{
		settoken_type(getContext(), token_type);
	}

	/**
	 * Set value of token_type
	 * @param context
	 * @param token_type
	 */
	public final void settoken_type(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String token_type)
	{
		getMendixObject().setValue(context, MemberNames.token_type.toString(), token_type);
	}

	/**
	 * @return value of scope
	 */
	public final java.lang.String getscope()
	{
		return getscope(getContext());
	}

	/**
	 * @param context
	 * @return value of scope
	 */
	public final java.lang.String getscope(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.scope.toString());
	}

	/**
	 * Set value of scope
	 * @param scope
	 */
	public final void setscope(java.lang.String scope)
	{
		setscope(getContext(), scope);
	}

	/**
	 * Set value of scope
	 * @param context
	 * @param scope
	 */
	public final void setscope(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String scope)
	{
		getMendixObject().setValue(context, MemberNames.scope.toString(), scope);
	}

	/**
	 * @return value of expires_in
	 */
	public final java.lang.Integer getexpires_in()
	{
		return getexpires_in(getContext());
	}

	/**
	 * @param context
	 * @return value of expires_in
	 */
	public final java.lang.Integer getexpires_in(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.expires_in.toString());
	}

	/**
	 * Set value of expires_in
	 * @param expires_in
	 */
	public final void setexpires_in(java.lang.Integer expires_in)
	{
		setexpires_in(getContext(), expires_in);
	}

	/**
	 * Set value of expires_in
	 * @param context
	 * @param expires_in
	 */
	public final void setexpires_in(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer expires_in)
	{
		getMendixObject().setValue(context, MemberNames.expires_in.toString(), expires_in);
	}

	/**
	 * @return value of ext_expires_in
	 */
	public final java.lang.Integer getext_expires_in()
	{
		return getext_expires_in(getContext());
	}

	/**
	 * @param context
	 * @return value of ext_expires_in
	 */
	public final java.lang.Integer getext_expires_in(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ext_expires_in.toString());
	}

	/**
	 * Set value of ext_expires_in
	 * @param ext_expires_in
	 */
	public final void setext_expires_in(java.lang.Integer ext_expires_in)
	{
		setext_expires_in(getContext(), ext_expires_in);
	}

	/**
	 * Set value of ext_expires_in
	 * @param context
	 * @param ext_expires_in
	 */
	public final void setext_expires_in(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer ext_expires_in)
	{
		getMendixObject().setValue(context, MemberNames.ext_expires_in.toString(), ext_expires_in);
	}

	/**
	 * @return value of access_token
	 */
	public final java.lang.String getaccess_token()
	{
		return getaccess_token(getContext());
	}

	/**
	 * @param context
	 * @return value of access_token
	 */
	public final java.lang.String getaccess_token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.access_token.toString());
	}

	/**
	 * Set value of access_token
	 * @param access_token
	 */
	public final void setaccess_token(java.lang.String access_token)
	{
		setaccess_token(getContext(), access_token);
	}

	/**
	 * Set value of access_token
	 * @param context
	 * @param access_token
	 */
	public final void setaccess_token(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String access_token)
	{
		getMendixObject().setValue(context, MemberNames.access_token.toString(), access_token);
	}

	/**
	 * @return value of refresh_token
	 */
	public final java.lang.String getrefresh_token()
	{
		return getrefresh_token(getContext());
	}

	/**
	 * @param context
	 * @return value of refresh_token
	 */
	public final java.lang.String getrefresh_token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.refresh_token.toString());
	}

	/**
	 * Set value of refresh_token
	 * @param refresh_token
	 */
	public final void setrefresh_token(java.lang.String refresh_token)
	{
		setrefresh_token(getContext(), refresh_token);
	}

	/**
	 * Set value of refresh_token
	 * @param context
	 * @param refresh_token
	 */
	public final void setrefresh_token(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String refresh_token)
	{
		getMendixObject().setValue(context, MemberNames.refresh_token.toString(), refresh_token);
	}

	/**
	 * @return value of id_token
	 */
	public final java.lang.String getid_token()
	{
		return getid_token(getContext());
	}

	/**
	 * @param context
	 * @return value of id_token
	 */
	public final java.lang.String getid_token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.id_token.toString());
	}

	/**
	 * Set value of id_token
	 * @param id_token
	 */
	public final void setid_token(java.lang.String id_token)
	{
		setid_token(getContext(), id_token);
	}

	/**
	 * Set value of id_token
	 * @param context
	 * @param id_token
	 */
	public final void setid_token(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String id_token)
	{
		getMendixObject().setValue(context, MemberNames.id_token.toString(), id_token);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Token_EmailSettings
	 */
	public final emailtemplate.proxies.EmailSettings getToken_EmailSettings() throws com.mendix.core.CoreException
	{
		return getToken_EmailSettings(getContext());
	}

	/**
	 * @param context
	 * @return value of Token_EmailSettings
	 * @throws com.mendix.core.CoreException
	 */
	public final emailtemplate.proxies.EmailSettings getToken_EmailSettings(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emailtemplate.proxies.EmailSettings result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Token_EmailSettings.toString());
		if (identifier != null) {
			result = emailtemplate.proxies.EmailSettings.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Token_EmailSettings
	 * @param token_emailsettings
	 */
	public final void setToken_EmailSettings(emailtemplate.proxies.EmailSettings token_emailsettings)
	{
		setToken_EmailSettings(getContext(), token_emailsettings);
	}

	/**
	 * Set value of Token_EmailSettings
	 * @param context
	 * @param token_emailsettings
	 */
	public final void setToken_EmailSettings(com.mendix.systemwideinterfaces.core.IContext context, emailtemplate.proxies.EmailSettings token_emailsettings)
	{
		if (token_emailsettings == null) {
			getMendixObject().setValue(context, MemberNames.Token_EmailSettings.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Token_EmailSettings.toString(), token_emailsettings.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return tokenMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailtemplate.proxies.Token that = (emailtemplate.proxies.Token) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
